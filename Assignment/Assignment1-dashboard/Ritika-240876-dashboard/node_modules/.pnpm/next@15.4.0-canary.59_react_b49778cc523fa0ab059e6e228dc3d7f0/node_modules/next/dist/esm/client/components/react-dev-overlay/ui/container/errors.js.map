{"version":3,"sources":["../../../../../../src/client/components/react-dev-overlay/ui/container/errors.tsx"],"sourcesContent":["import { useState, useMemo, useRef, Suspense } from 'react'\nimport type { DebugInfo } from '../../types'\nimport { Overlay } from '../components/overlay'\nimport { RuntimeError } from './runtime-error'\nimport { getErrorSource } from '../../../../../shared/lib/error-source'\nimport { HotlinkedText } from '../components/hot-linked-text'\nimport { PseudoHtmlDiff } from './runtime-error/component-stack-pseudo-html'\nimport { isConsoleError } from '../../../errors/console-error'\nimport { extractNextErrorCode } from '../../../../../lib/error-telemetry-utils'\nimport {\n  ErrorOverlayLayout,\n  type ErrorOverlayLayoutProps,\n} from '../components/errors/error-overlay-layout/error-overlay-layout'\nimport {\n  getHydrationErrorStackInfo,\n  isHydrationError,\n  NEXTJS_HYDRATION_ERROR_LINK,\n} from '../../../react-19-hydration-error'\nimport type { ReadyRuntimeError } from '../../utils/get-error-by-type'\nimport type { ErrorBaseProps } from '../components/errors/error-overlay/error-overlay'\nimport { getSquashedHydrationErrorDetails } from '../../pages/hydration-error-state'\nimport { isRecoverableError } from '../../../../react-client-callbacks/on-recoverable-error'\n\nexport interface ErrorsProps extends ErrorBaseProps {\n  runtimeErrors: ReadyRuntimeError[]\n  debugInfo: DebugInfo\n  onClose: () => void\n}\n\ntype ReadyErrorEvent = ReadyRuntimeError\n\nfunction isNextjsLink(text: string): boolean {\n  return text.startsWith('https://nextjs.org')\n}\n\nfunction HydrationErrorDescription({ message }: { message: string }) {\n  return <HotlinkedText text={message} matcher={isNextjsLink} />\n}\n\nfunction GenericErrorDescription({ error }: { error: Error }) {\n  const environmentName =\n    'environmentName' in error ? error.environmentName : ''\n  const envPrefix = environmentName ? `[ ${environmentName} ] ` : ''\n\n  // The environment name will be displayed as a label, so remove it\n  // from the message (e.g. \"[ Server ] hello world\" -> \"hello world\").\n  let message = error.message\n  if (message.startsWith(envPrefix)) {\n    message = message.slice(envPrefix.length)\n  }\n\n  return (\n    <>\n      <HotlinkedText text={message} matcher={isNextjsLink} />\n    </>\n  )\n}\n\nfunction getErrorType(error: Error): ErrorOverlayLayoutProps['errorType'] {\n  if (isRecoverableError(error)) {\n    return `Recoverable ${error.name}`\n  }\n  if (isConsoleError(error)) {\n    return `Console ${error.name}`\n  }\n  return `Runtime ${error.name}`\n}\n\nconst noErrorDetails = {\n  hydrationWarning: null,\n  notes: null,\n  reactOutputComponentDiff: null,\n}\nfunction useErrorDetails(error: Error | undefined): {\n  hydrationWarning: string | null\n  notes: string | null\n  reactOutputComponentDiff: string | null\n} {\n  return useMemo(() => {\n    if (error === undefined) {\n      return noErrorDetails\n    }\n\n    const pagesRouterErrorDetails = getSquashedHydrationErrorDetails(error)\n    if (pagesRouterErrorDetails !== null) {\n      return {\n        hydrationWarning: pagesRouterErrorDetails.warning ?? null,\n        notes: null,\n        reactOutputComponentDiff:\n          pagesRouterErrorDetails.reactOutputComponentDiff ?? null,\n      }\n    }\n\n    if (!isHydrationError(error)) {\n      return noErrorDetails\n    }\n\n    const { message, notes, diff } = getHydrationErrorStackInfo(error)\n    if (message === null) {\n      return noErrorDetails\n    }\n\n    return {\n      hydrationWarning: message,\n      notes,\n      reactOutputComponentDiff: diff,\n    }\n  }, [error])\n}\n\nexport function Errors({\n  runtimeErrors,\n  debugInfo,\n  onClose,\n  ...props\n}: ErrorsProps) {\n  const dialogResizerRef = useRef<HTMLDivElement | null>(null)\n\n  const isLoading = useMemo<boolean>(() => {\n    return runtimeErrors.length < 1\n  }, [runtimeErrors.length])\n\n  const [activeIdx, setActiveIndex] = useState<number>(0)\n\n  const activeError = useMemo<ReadyErrorEvent | null>(\n    () => runtimeErrors[activeIdx] ?? null,\n    [activeIdx, runtimeErrors]\n  )\n  const errorDetails = useErrorDetails(activeError?.error)\n\n  if (isLoading) {\n    // TODO: better loading state\n    return <Overlay />\n  }\n\n  if (!activeError) {\n    return null\n  }\n\n  const error = activeError.error\n  const isServerError = ['server', 'edge-server'].includes(\n    getErrorSource(error) || ''\n  )\n  const errorType = getErrorType(error)\n  // TOOD: May be better to always treat everything past the first blank line as notes\n  // We're currently only special casing hydration error messages.\n  const notes = errorDetails.notes\n  const hydrationWarning = errorDetails.hydrationWarning\n  const errorCode = extractNextErrorCode(error)\n\n  const footerMessage = isServerError\n    ? 'This error happened while generating the page. Any console logs will be displayed in the terminal window.'\n    : undefined\n\n  return (\n    <ErrorOverlayLayout\n      errorCode={errorCode}\n      errorType={errorType}\n      errorMessage={\n        hydrationWarning ? (\n          <HydrationErrorDescription message={hydrationWarning} />\n        ) : (\n          <GenericErrorDescription error={error} />\n        )\n      }\n      onClose={isServerError ? undefined : onClose}\n      debugInfo={debugInfo}\n      error={error}\n      runtimeErrors={runtimeErrors}\n      activeIdx={activeIdx}\n      setActiveIndex={setActiveIndex}\n      footerMessage={footerMessage}\n      dialogResizerRef={dialogResizerRef}\n      {...props}\n    >\n      <div className=\"error-overlay-notes-container\">\n        {notes ? (\n          <>\n            <p\n              id=\"nextjs__container_errors__notes\"\n              className=\"nextjs__container_errors__notes\"\n            >\n              {notes}\n            </p>\n          </>\n        ) : null}\n        {hydrationWarning ? (\n          <p\n            id=\"nextjs__container_errors__link\"\n            className=\"nextjs__container_errors__link\"\n          >\n            <HotlinkedText\n              text={`See more info here: ${NEXTJS_HYDRATION_ERROR_LINK}`}\n            />\n          </p>\n        ) : null}\n      </div>\n\n      {errorDetails.reactOutputComponentDiff ? (\n        <PseudoHtmlDiff\n          className=\"nextjs__container_errors__component-stack\"\n          reactOutputComponentDiff={errorDetails.reactOutputComponentDiff || ''}\n        />\n      ) : null}\n      <Suspense fallback={<div data-nextjs-error-suspended />}>\n        <RuntimeError\n          key={activeError.id.toString()}\n          error={activeError}\n          dialogResizerRef={dialogResizerRef}\n        />\n      </Suspense>\n    </ErrorOverlayLayout>\n  )\n}\n\nexport const styles = `\n  .nextjs-error-with-static {\n    bottom: calc(16px * 4.5);\n  }\n  p.nextjs__container_errors__link {\n    font-size: var(--size-14);\n  }\n  p.nextjs__container_errors__notes {\n    color: var(--color-stack-notes);\n    font-size: var(--size-14);\n    line-height: 1.5;\n  }\n  .nextjs-container-errors-body > h2:not(:first-child) {\n    margin-top: calc(16px + 8px);\n  }\n  .nextjs-container-errors-body > h2 {\n    color: var(--color-title-color);\n    margin-bottom: 8px;\n    font-size: var(--size-20);\n  }\n  .nextjs-toast-errors-parent {\n    cursor: pointer;\n    transition: transform 0.2s ease;\n  }\n  .nextjs-toast-errors-parent:hover {\n    transform: scale(1.1);\n  }\n  .nextjs-toast-errors {\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n  }\n  .nextjs-toast-errors > svg {\n    margin-right: 8px;\n  }\n  .nextjs-toast-hide-button {\n    margin-left: 24px;\n    border: none;\n    background: none;\n    color: var(--color-ansi-bright-white);\n    padding: 0;\n    transition: opacity 0.25s ease;\n    opacity: 0.7;\n  }\n  .nextjs-toast-hide-button:hover {\n    opacity: 1;\n  }\n  .nextjs__container_errors__error_title {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    margin-bottom: 14px;\n  }\n  .error-overlay-notes-container {\n    margin: 8px 2px;\n  }\n  .error-overlay-notes-container p {\n    white-space: pre-wrap;\n  }\n`\n"],"names":["useState","useMemo","useRef","Suspense","Overlay","RuntimeError","getErrorSource","HotlinkedText","PseudoHtmlDiff","isConsoleError","extractNextErrorCode","ErrorOverlayLayout","getHydrationErrorStackInfo","isHydrationError","NEXTJS_HYDRATION_ERROR_LINK","getSquashedHydrationErrorDetails","isRecoverableError","isNextjsLink","text","startsWith","HydrationErrorDescription","message","matcher","GenericErrorDescription","error","environmentName","envPrefix","slice","length","getErrorType","name","noErrorDetails","hydrationWarning","notes","reactOutputComponentDiff","useErrorDetails","undefined","pagesRouterErrorDetails","warning","diff","Errors","runtimeErrors","debugInfo","onClose","props","dialogResizerRef","isLoading","activeIdx","setActiveIndex","activeError","errorDetails","isServerError","includes","errorType","errorCode","footerMessage","errorMessage","div","className","p","id","fallback","data-nextjs-error-suspended","toString","styles"],"mappings":"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","ignoreList":[0]}