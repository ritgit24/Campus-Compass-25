{"version":3,"sources":["../../../../../../src/client/components/react-dev-overlay/ui/container/build-error.tsx"],"sourcesContent":["import React, { useCallback, useMemo } from 'react'\nimport stripAnsi from 'next/dist/compiled/strip-ansi'\nimport { Terminal } from '../components/terminal'\nimport { ErrorOverlayLayout } from '../components/errors/error-overlay-layout/error-overlay-layout'\nimport type { ErrorBaseProps } from '../components/errors/error-overlay/error-overlay'\n\nexport interface BuildErrorProps extends ErrorBaseProps {\n  message: string\n}\n\nconst getErrorTextFromBuildErrorMessage = (multiLineMessage: string) => {\n  const lines = multiLineMessage.split('\\n')\n  // The multi-line build error message looks like:\n  // <file path>:<line number>:<column number>\n  // <error message>\n  // <error code frame of compiler or bundler>\n  // e.g.\n  // ./path/to/file.js:1:1\n  // SyntaxError: ...\n  // > 1 | con st foo =\n  // ...\n  return (\n    stripAnsi(lines[1] || '')\n      // label will already say that it's an error\n      .replace(/^Error: /, '')\n  )\n}\n\nexport const BuildError: React.FC<BuildErrorProps> = function BuildError({\n  message,\n  ...props\n}) {\n  const noop = useCallback(() => {}, [])\n  const error = new Error(message)\n  const formattedMessage = useMemo(\n    () => getErrorTextFromBuildErrorMessage(message) || 'Failed to compile',\n    [message]\n  )\n\n  return (\n    <ErrorOverlayLayout\n      errorType=\"Build Error\"\n      errorMessage={formattedMessage}\n      onClose={noop}\n      error={error}\n      footerMessage=\"This error occurred during the build process and can only be dismissed by fixing the error.\"\n      {...props}\n    >\n      <Terminal content={message} />\n    </ErrorOverlayLayout>\n  )\n}\n\nexport const styles = ``\n"],"names":["React","useCallback","useMemo","stripAnsi","Terminal","ErrorOverlayLayout","getErrorTextFromBuildErrorMessage","multiLineMessage","lines","split","replace","BuildError","message","props","noop","error","Error","formattedMessage","errorType","errorMessage","onClose","footerMessage","content","styles"],"mappings":";AAAA,OAAOA,SAASC,WAAW,EAAEC,OAAO,QAAQ,QAAO;AACnD,OAAOC,eAAe,gCAA+B;AACrD,SAASC,QAAQ,QAAQ,yBAAwB;AACjD,SAASC,kBAAkB,QAAQ,iEAAgE;AAOnG,MAAMC,oCAAoC,CAACC;IACzC,MAAMC,QAAQD,iBAAiBE,KAAK,CAAC;IACrC,iDAAiD;IACjD,4CAA4C;IAC5C,kBAAkB;IAClB,4CAA4C;IAC5C,OAAO;IACP,wBAAwB;IACxB,mBAAmB;IACnB,qBAAqB;IACrB,MAAM;IACN,OACEN,UAAUK,KAAK,CAAC,EAAE,IAAI,GACpB,4CAA4C;KAC3CE,OAAO,CAAC,YAAY;AAE3B;AAEA,OAAO,MAAMC,aAAwC,SAASA,WAAW,KAGxE;IAHwE,IAAA,EACvEC,OAAO,EACP,GAAGC,OACJ,GAHwE;IAIvE,MAAMC,OAAOb,YAAY,KAAO,GAAG,EAAE;IACrC,MAAMc,QAAQ,qBAAkB,CAAlB,IAAIC,MAAMJ,UAAV,qBAAA;eAAA;oBAAA;sBAAA;IAAiB;IAC/B,MAAMK,mBAAmBf,QACvB,IAAMI,kCAAkCM,YAAY,qBACpD;QAACA;KAAQ;IAGX,qBACE,KAACP;QACCa,WAAU;QACVC,cAAcF;QACdG,SAASN;QACTC,OAAOA;QACPM,eAAc;QACb,GAAGR,KAAK;kBAET,cAAA,KAACT;YAASkB,SAASV;;;AAGzB,EAAC;AAED,OAAO,MAAMW,SAAU,GAAC","ignoreList":[0]}