{"version":3,"sources":["../../../../../src/client/components/react-dev-overlay/ui/dev-overlay.tsx"],"sourcesContent":["import type { OverlayDispatch, OverlayState } from '../shared'\n\nimport { ShadowPortal } from './components/shadow-portal'\nimport { Base } from './styles/base'\nimport { ComponentStyles } from './styles/component-styles'\nimport { CssReset } from './styles/css-reset'\nimport { Colors } from './styles/colors'\nimport { ErrorOverlay } from './components/errors/error-overlay/error-overlay'\nimport { DevToolsIndicator } from './components/errors/dev-tools-indicator/dev-tools-indicator'\nimport { RenderError } from './container/runtime-error/render-error'\nimport { DarkTheme } from './styles/dark-theme'\nimport { useDevToolsScale } from './components/errors/dev-tools-indicator/dev-tools-info/preferences'\n\nexport function DevOverlay({\n  state,\n  dispatch,\n}: {\n  state: OverlayState\n  dispatch: OverlayDispatch\n}) {\n  const [scale, setScale] = useDevToolsScale()\n  return (\n    <ShadowPortal>\n      <CssReset />\n      <Base scale={scale} />\n      <Colors />\n      <ComponentStyles />\n      <DarkTheme />\n\n      <RenderError state={state} isAppDir={true}>\n        {({ runtimeErrors, totalErrorCount }) => {\n          const isBuildError = state.buildError !== null\n          return (\n            <>\n              {state.showIndicator && (\n                <DevToolsIndicator\n                  scale={scale}\n                  setScale={setScale}\n                  state={state}\n                  dispatch={dispatch}\n                  errorCount={totalErrorCount}\n                  isBuildError={isBuildError}\n                />\n              )}\n\n              <ErrorOverlay\n                state={state}\n                dispatch={dispatch}\n                runtimeErrors={runtimeErrors}\n                errorCount={totalErrorCount}\n              />\n            </>\n          )\n        }}\n      </RenderError>\n    </ShadowPortal>\n  )\n}\n"],"names":["ShadowPortal","Base","ComponentStyles","CssReset","Colors","ErrorOverlay","DevToolsIndicator","RenderError","DarkTheme","useDevToolsScale","DevOverlay","state","dispatch","scale","setScale","isAppDir","runtimeErrors","totalErrorCount","isBuildError","buildError","showIndicator","errorCount"],"mappings":";AAEA,SAASA,YAAY,QAAQ,6BAA4B;AACzD,SAASC,IAAI,QAAQ,gBAAe;AACpC,SAASC,eAAe,QAAQ,4BAA2B;AAC3D,SAASC,QAAQ,QAAQ,qBAAoB;AAC7C,SAASC,MAAM,QAAQ,kBAAiB;AACxC,SAASC,YAAY,QAAQ,kDAAiD;AAC9E,SAASC,iBAAiB,QAAQ,8DAA6D;AAC/F,SAASC,WAAW,QAAQ,yCAAwC;AACpE,SAASC,SAAS,QAAQ,sBAAqB;AAC/C,SAASC,gBAAgB,QAAQ,qEAAoE;AAErG,OAAO,SAASC,WAAW,KAM1B;IAN0B,IAAA,EACzBC,KAAK,EACLC,QAAQ,EAIT,GAN0B;IAOzB,MAAM,CAACC,OAAOC,SAAS,GAAGL;IAC1B,qBACE,MAACT;;0BACC,KAACG;0BACD,KAACF;gBAAKY,OAAOA;;0BACb,KAACT;0BACD,KAACF;0BACD,KAACM;0BAED,KAACD;gBAAYI,OAAOA;gBAAOI,UAAU;0BAClC;wBAAC,EAAEC,aAAa,EAAEC,eAAe,EAAE;oBAClC,MAAMC,eAAeP,MAAMQ,UAAU,KAAK;oBAC1C,qBACE;;4BACGR,MAAMS,aAAa,kBAClB,KAACd;gCACCO,OAAOA;gCACPC,UAAUA;gCACVH,OAAOA;gCACPC,UAAUA;gCACVS,YAAYJ;gCACZC,cAAcA;;0CAIlB,KAACb;gCACCM,OAAOA;gCACPC,UAAUA;gCACVI,eAAeA;gCACfK,YAAYJ;;;;gBAIpB;;;;AAIR","ignoreList":[0]}