{"version":3,"sources":["../../../../../../../src/client/components/react-dev-overlay/ui/components/overview/segment-explorer.tsx"],"sourcesContent":["import type { HTMLProps } from 'react'\nimport { css } from '../../../utils/css'\nimport type { DevToolsInfoPropsCore } from '../errors/dev-tools-indicator/dev-tools-info/dev-tools-info'\nimport { DevToolsInfo } from '../errors/dev-tools-indicator/dev-tools-info/dev-tools-info'\nimport { cx } from '../../utils/cx'\nimport { LeftArrow } from '../../icons/left-arrow'\nimport {\n  useSegmentTreeClientState,\n  type SegmentNode,\n} from '../../../../../../shared/lib/devtool/app-segment-tree'\nimport type { Trie, TrieNode } from '../../../../../../shared/lib/devtool/trie'\n\nconst IconLayout = (props: React.SVGProps<SVGSVGElement>) => {\n  return (\n    <svg\n      {...props}\n      viewBox=\"0 0 16 16\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M16 12.5L15.9873 12.7559C15.8677 13.9323 14.9323 14.8677 13.7559 14.9873L13.5 15H2.5L2.24414 14.9873C1.06772 14.8677 0.132274 13.9323 0.0126953 12.7559L0 12.5V1H16V12.5ZM1.5 6.25488V12.5C1.5 13.0523 1.94772 13.5 2.5 13.5H4.99512V6.25488H1.5ZM6.24512 6.25488V13.5H13.5C14.0523 13.5 14.5 13.0523 14.5 12.5V6.25488H6.24512ZM1.5 5.00488H14.5V2.5H1.5V5.00488Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  )\n}\n\nconst IconPage = (props: React.SVGProps<SVGSVGElement>) => {\n  return (\n    <svg\n      {...props}\n      viewBox=\"0 0 16 16\"\n      fill=\"none\"\n      strokeLinejoin=\"round\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M14.5 6.5V13.5C14.5 14.8807 13.3807 16 12 16H4C2.61929 16 1.5 14.8807 1.5 13.5V1.5V0H3H8H9.08579C9.351 0 9.60536 0.105357 9.79289 0.292893L14.2071 4.70711C14.3946 4.89464 14.5 5.149 14.5 5.41421V6.5ZM13 6.5V13.5C13 14.0523 12.5523 14.5 12 14.5H4C3.44772 14.5 3 14.0523 3 13.5V1.5H8V5V6.5H9.5H13ZM9.5 2.12132V5H12.3787L9.5 2.12132Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  )\n}\n\nconst ICONS = {\n  layout: <IconLayout width={16} />,\n  page: <IconPage width={16} />,\n}\n\nfunction PageSegmentTree({ tree }: { tree: Trie<SegmentNode> | undefined }) {\n  if (!tree) {\n    return null\n  }\n  return (\n    <div className=\"segment-explorer-content\">\n      <PageSegmentTreeLayerPresentation\n        tree={tree}\n        node={tree.getRoot()}\n        level={0}\n      />\n    </div>\n  )\n}\n\nfunction PageSegmentTreeLayerPresentation({\n  tree,\n  node,\n  level,\n}: {\n  tree: Trie<SegmentNode>\n  node: TrieNode<SegmentNode>\n  level: number\n}) {\n  const segments = node.value?.pagePath?.split('/') || []\n  const fileName = segments[segments.length - 1] || ''\n  const nodeName = node.value?.type\n  const pagePathPrefix = segments.slice(0, -1).join('/')\n\n  return (\n    <div className=\"segment-explorer-item\">\n      {!fileName || level === 0 ? null : (\n        <div className=\"segment-explorer-item-row\">\n          <div className=\"segment-explorer-line\">\n            <div className={`segment-explorer-line-text-${nodeName}`}>\n              <span\n                className={cx(\n                  'segment-explorer-line-icon',\n                  `segment-explorer-line-icon-${nodeName}`\n                )}\n              >\n                {nodeName === 'layout' ? ICONS.layout : ICONS.page}\n              </span>\n              {pagePathPrefix === '' ? '' : `${pagePathPrefix}/`}\n              <span className=\"segment-explorer-filename-path\">{fileName}</span>\n            </div>\n          </div>\n        </div>\n      )}\n\n      <div className=\"tree-node-expanded-rendered-children\">\n        {Object.entries(node.children).map(\n          ([key, child]) =>\n            child && (\n              <PageSegmentTreeLayerPresentation\n                key={key}\n                tree={tree}\n                node={child}\n                level={level + 1}\n              />\n            )\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport function SegmentsExplorer(\n  props: DevToolsInfoPropsCore & HTMLProps<HTMLDivElement>\n) {\n  const ctx = useSegmentTreeClientState()\n  if (!ctx) {\n    return null\n  }\n\n  return (\n    <DevToolsInfo\n      title={\n        <>\n          <button\n            className=\"segment-explorer-back-button\"\n            onClick={props.close}\n          >\n            <LeftArrow />\n          </button>\n          {'Segment Explorer'}\n        </>\n      }\n      closeButton={false}\n      {...props}\n    >\n      <PageSegmentTree tree={ctx.tree} />\n    </DevToolsInfo>\n  )\n}\n\nexport const DEV_TOOLS_INFO_RENDER_FILES_STYLES = css`\n  .segment-explorer-back-button {\n    margin-right: 12px;\n    color: var(--color-gray-1000);\n  }\n  .segment-explorer-back-button svg {\n    width: 20px;\n    height: 20px;\n  }\n\n  .segment-explorer-content {\n    overflow-y: auto;\n    padding: 0 12px;\n    font-size: var(--size-14);\n  }\n\n  .segment-explorer-item-row {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    padding: 2px 0;\n  }\n\n  .segment-explorer-filename-path {\n    display: inline-block;\n\n    &:hover {\n      color: var(--color-gray-1000);\n      text-decoration: none;\n    }\n  }\n\n  .segment-explorer-filename-path a {\n    color: inherit;\n    text-decoration: inherit;\n  }\n\n  .segment-explorer-line {\n    white-space: pre;\n  }\n\n  .segment-explorer-line-icon {\n    margin-right: 4px;\n  }\n  .segment-explorer-line-icon-page {\n    color: inherit;\n  }\n  .segment-explorer-line-icon-layout {\n    color: var(--color-gray-1-00);\n  }\n\n  .segment-explorer-line-text-page {\n    color: var(--color-blue-900);\n    font-weight: 500;\n  }\n`\n"],"names":["DEV_TOOLS_INFO_RENDER_FILES_STYLES","SegmentsExplorer","IconLayout","props","svg","viewBox","fill","xmlns","path","d","IconPage","strokeLinejoin","fillRule","clipRule","ICONS","layout","width","page","PageSegmentTree","tree","div","className","PageSegmentTreeLayerPresentation","node","getRoot","level","segments","value","pagePath","split","fileName","length","nodeName","type","pagePathPrefix","slice","join","span","cx","Object","entries","children","map","key","child","ctx","useSegmentTreeClientState","DevToolsInfo","title","button","onClick","close","LeftArrow","closeButton","css"],"mappings":";;;;;;;;;;;;;;;IAoJaA,kCAAkC;eAAlCA;;IA7BGC,gBAAgB;eAAhBA;;;;;qBAtHI;8BAES;oBACV;2BACO;gCAInB;;;;;;;;;;AAGP,MAAMC,aAAa,CAACC;IAClB,qBACE,qBAACC;QACE,GAAGD,KAAK;QACTE,SAAQ;QACRC,MAAK;QACLC,OAAM;kBAEN,cAAA,qBAACC;YACCC,GAAE;YACFH,MAAK;;;AAIb;AAEA,MAAMI,WAAW,CAACP;IAChB,qBACE,qBAACC;QACE,GAAGD,KAAK;QACTE,SAAQ;QACRC,MAAK;QACLK,gBAAe;QACfJ,OAAM;kBAEN,cAAA,qBAACC;YACCI,UAAS;YACTC,UAAS;YACTJ,GAAE;YACFH,MAAK;;;AAIb;AAEA,MAAMQ,QAAQ;IACZC,sBAAQ,qBAACb;QAAWc,OAAO;;IAC3BC,oBAAM,qBAACP;QAASM,OAAO;;AACzB;AAEA,SAASE,gBAAgB,KAAiD;IAAjD,IAAA,EAAEC,IAAI,EAA2C,GAAjD;IACvB,IAAI,CAACA,MAAM;QACT,OAAO;IACT;IACA,qBACE,qBAACC;QAAIC,WAAU;kBACb,cAAA,qBAACC;YACCH,MAAMA;YACNI,MAAMJ,KAAKK,OAAO;YAClBC,OAAO;;;AAIf;AAEA,SAASH,iCAAiC,KAQzC;IARyC,IAAA,EACxCH,IAAI,EACJI,IAAI,EACJE,KAAK,EAKN,GARyC;QASvBF,sBAAAA,aAEAA;IAFjB,MAAMG,WAAWH,EAAAA,cAAAA,KAAKI,KAAK,sBAAVJ,uBAAAA,YAAYK,QAAQ,qBAApBL,qBAAsBM,KAAK,CAAC,SAAQ,EAAE;IACvD,MAAMC,WAAWJ,QAAQ,CAACA,SAASK,MAAM,GAAG,EAAE,IAAI;IAClD,MAAMC,YAAWT,eAAAA,KAAKI,KAAK,qBAAVJ,aAAYU,IAAI;IACjC,MAAMC,iBAAiBR,SAASS,KAAK,CAAC,GAAG,CAAC,GAAGC,IAAI,CAAC;IAElD,qBACE,sBAAChB;QAAIC,WAAU;;YACZ,CAACS,YAAYL,UAAU,IAAI,qBAC1B,qBAACL;gBAAIC,WAAU;0BACb,cAAA,qBAACD;oBAAIC,WAAU;8BACb,cAAA,sBAACD;wBAAIC,WAAW,AAAC,gCAA6BW;;0CAC5C,qBAACK;gCACChB,WAAWiB,IAAAA,MAAE,EACX,8BACA,AAAC,gCAA6BN;0CAG/BA,aAAa,WAAWlB,MAAMC,MAAM,GAAGD,MAAMG,IAAI;;4BAEnDiB,mBAAmB,KAAK,KAAK,AAAC,KAAEA,iBAAe;0CAChD,qBAACG;gCAAKhB,WAAU;0CAAkCS;;;;;;0BAM1D,qBAACV;gBAAIC,WAAU;0BACZkB,OAAOC,OAAO,CAACjB,KAAKkB,QAAQ,EAAEC,GAAG,CAChC;wBAAC,CAACC,KAAKC,MAAM;2BACXA,uBACE,qBAACtB;wBAECH,MAAMA;wBACNI,MAAMqB;wBACNnB,OAAOA,QAAQ;uBAHVkB;;;;;AAUrB;AAEO,SAAS1C,iBACdE,KAAwD;IAExD,MAAM0C,MAAMC,IAAAA,yCAAyB;IACrC,IAAI,CAACD,KAAK;QACR,OAAO;IACT;IAEA,qBACE,qBAACE,0BAAY;QACXC,qBACE;;8BACE,qBAACC;oBACC5B,WAAU;oBACV6B,SAAS/C,MAAMgD,KAAK;8BAEpB,cAAA,qBAACC,oBAAS;;gBAEX;;;QAGLC,aAAa;QACZ,GAAGlD,KAAK;kBAET,cAAA,qBAACe;YAAgBC,MAAM0B,IAAI1B,IAAI;;;AAGrC;AAEO,MAAMnB,yCAAqCsD,QAAG","ignoreList":[0]}