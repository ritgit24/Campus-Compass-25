import { _ as _tagged_template_literal_loose } from "@swc/helpers/_/_tagged_template_literal_loose";
function _templateObject() {
    const data = _tagged_template_literal_loose([
        "\n  .segment-explorer-back-button {\n    margin-right: 12px;\n    color: var(--color-gray-1000);\n  }\n  .segment-explorer-back-button svg {\n    width: 20px;\n    height: 20px;\n  }\n\n  .segment-explorer-content {\n    overflow-y: auto;\n    padding: 0 12px;\n    font-size: var(--size-14);\n  }\n\n  .segment-explorer-item-row {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    padding: 2px 0;\n  }\n\n  .segment-explorer-filename-path {\n    display: inline-block;\n\n    &:hover {\n      color: var(--color-gray-1000);\n      text-decoration: none;\n    }\n  }\n\n  .segment-explorer-filename-path a {\n    color: inherit;\n    text-decoration: inherit;\n  }\n\n  .segment-explorer-line {\n    white-space: pre;\n  }\n\n  .segment-explorer-line-icon {\n    margin-right: 4px;\n  }\n  .segment-explorer-line-icon-page {\n    color: inherit;\n  }\n  .segment-explorer-line-icon-layout {\n    color: var(--color-gray-1-00);\n  }\n\n  .segment-explorer-line-text-page {\n    color: var(--color-blue-900);\n    font-weight: 500;\n  }\n"
    ]);
    _templateObject = function() {
        return data;
    };
    return data;
}
import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { css } from '../../../utils/css';
import { DevToolsInfo } from '../errors/dev-tools-indicator/dev-tools-info/dev-tools-info';
import { cx } from '../../utils/cx';
import { LeftArrow } from '../../icons/left-arrow';
import { useSegmentTreeClientState } from '../../../../../../shared/lib/devtool/app-segment-tree';
const IconLayout = (props)=>{
    return /*#__PURE__*/ _jsx("svg", {
        ...props,
        viewBox: "0 0 16 16",
        fill: "none",
        xmlns: "http://www.w3.org/2000/svg",
        children: /*#__PURE__*/ _jsx("path", {
            d: "M16 12.5L15.9873 12.7559C15.8677 13.9323 14.9323 14.8677 13.7559 14.9873L13.5 15H2.5L2.24414 14.9873C1.06772 14.8677 0.132274 13.9323 0.0126953 12.7559L0 12.5V1H16V12.5ZM1.5 6.25488V12.5C1.5 13.0523 1.94772 13.5 2.5 13.5H4.99512V6.25488H1.5ZM6.24512 6.25488V13.5H13.5C14.0523 13.5 14.5 13.0523 14.5 12.5V6.25488H6.24512ZM1.5 5.00488H14.5V2.5H1.5V5.00488Z",
            fill: "currentColor"
        })
    });
};
const IconPage = (props)=>{
    return /*#__PURE__*/ _jsx("svg", {
        ...props,
        viewBox: "0 0 16 16",
        fill: "none",
        strokeLinejoin: "round",
        xmlns: "http://www.w3.org/2000/svg",
        children: /*#__PURE__*/ _jsx("path", {
            fillRule: "evenodd",
            clipRule: "evenodd",
            d: "M14.5 6.5V13.5C14.5 14.8807 13.3807 16 12 16H4C2.61929 16 1.5 14.8807 1.5 13.5V1.5V0H3H8H9.08579C9.351 0 9.60536 0.105357 9.79289 0.292893L14.2071 4.70711C14.3946 4.89464 14.5 5.149 14.5 5.41421V6.5ZM13 6.5V13.5C13 14.0523 12.5523 14.5 12 14.5H4C3.44772 14.5 3 14.0523 3 13.5V1.5H8V5V6.5H9.5H13ZM9.5 2.12132V5H12.3787L9.5 2.12132Z",
            fill: "currentColor"
        })
    });
};
const ICONS = {
    layout: /*#__PURE__*/ _jsx(IconLayout, {
        width: 16
    }),
    page: /*#__PURE__*/ _jsx(IconPage, {
        width: 16
    })
};
function PageSegmentTree(param) {
    let { tree } = param;
    if (!tree) {
        return null;
    }
    return /*#__PURE__*/ _jsx("div", {
        className: "segment-explorer-content",
        children: /*#__PURE__*/ _jsx(PageSegmentTreeLayerPresentation, {
            tree: tree,
            node: tree.getRoot(),
            level: 0
        })
    });
}
function PageSegmentTreeLayerPresentation(param) {
    let { tree, node, level } = param;
    var _node_value_pagePath, _node_value, _node_value1;
    const segments = ((_node_value = node.value) == null ? void 0 : (_node_value_pagePath = _node_value.pagePath) == null ? void 0 : _node_value_pagePath.split('/')) || [];
    const fileName = segments[segments.length - 1] || '';
    const nodeName = (_node_value1 = node.value) == null ? void 0 : _node_value1.type;
    const pagePathPrefix = segments.slice(0, -1).join('/');
    return /*#__PURE__*/ _jsxs("div", {
        className: "segment-explorer-item",
        children: [
            !fileName || level === 0 ? null : /*#__PURE__*/ _jsx("div", {
                className: "segment-explorer-item-row",
                children: /*#__PURE__*/ _jsx("div", {
                    className: "segment-explorer-line",
                    children: /*#__PURE__*/ _jsxs("div", {
                        className: "segment-explorer-line-text-" + nodeName,
                        children: [
                            /*#__PURE__*/ _jsx("span", {
                                className: cx('segment-explorer-line-icon', "segment-explorer-line-icon-" + nodeName),
                                children: nodeName === 'layout' ? ICONS.layout : ICONS.page
                            }),
                            pagePathPrefix === '' ? '' : "" + pagePathPrefix + "/",
                            /*#__PURE__*/ _jsx("span", {
                                className: "segment-explorer-filename-path",
                                children: fileName
                            })
                        ]
                    })
                })
            }),
            /*#__PURE__*/ _jsx("div", {
                className: "tree-node-expanded-rendered-children",
                children: Object.entries(node.children).map((param)=>{
                    let [key, child] = param;
                    return child && /*#__PURE__*/ _jsx(PageSegmentTreeLayerPresentation, {
                        tree: tree,
                        node: child,
                        level: level + 1
                    }, key);
                })
            })
        ]
    });
}
export function SegmentsExplorer(props) {
    const ctx = useSegmentTreeClientState();
    if (!ctx) {
        return null;
    }
    return /*#__PURE__*/ _jsx(DevToolsInfo, {
        title: /*#__PURE__*/ _jsxs(_Fragment, {
            children: [
                /*#__PURE__*/ _jsx("button", {
                    className: "segment-explorer-back-button",
                    onClick: props.close,
                    children: /*#__PURE__*/ _jsx(LeftArrow, {})
                }),
                'Segment Explorer'
            ]
        }),
        closeButton: false,
        ...props,
        children: /*#__PURE__*/ _jsx(PageSegmentTree, {
            tree: ctx.tree
        })
    });
}
export const DEV_TOOLS_INFO_RENDER_FILES_STYLES = css(_templateObject());

//# sourceMappingURL=segment-explorer.js.map