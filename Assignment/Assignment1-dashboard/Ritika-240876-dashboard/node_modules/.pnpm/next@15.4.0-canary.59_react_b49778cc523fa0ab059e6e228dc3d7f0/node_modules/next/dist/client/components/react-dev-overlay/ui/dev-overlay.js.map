{"version":3,"sources":["../../../../../src/client/components/react-dev-overlay/ui/dev-overlay.tsx"],"sourcesContent":["import type { OverlayDispatch, OverlayState } from '../shared'\n\nimport { ShadowPortal } from './components/shadow-portal'\nimport { Base } from './styles/base'\nimport { ComponentStyles } from './styles/component-styles'\nimport { CssReset } from './styles/css-reset'\nimport { Colors } from './styles/colors'\nimport { ErrorOverlay } from './components/errors/error-overlay/error-overlay'\nimport { DevToolsIndicator } from './components/errors/dev-tools-indicator/dev-tools-indicator'\nimport { RenderError } from './container/runtime-error/render-error'\nimport { DarkTheme } from './styles/dark-theme'\nimport { useDevToolsScale } from './components/errors/dev-tools-indicator/dev-tools-info/preferences'\n\nexport function DevOverlay({\n  state,\n  dispatch,\n}: {\n  state: OverlayState\n  dispatch: OverlayDispatch\n}) {\n  const [scale, setScale] = useDevToolsScale()\n  return (\n    <ShadowPortal>\n      <CssReset />\n      <Base scale={scale} />\n      <Colors />\n      <ComponentStyles />\n      <DarkTheme />\n\n      <RenderError state={state} isAppDir={true}>\n        {({ runtimeErrors, totalErrorCount }) => {\n          const isBuildError = state.buildError !== null\n          return (\n            <>\n              {state.showIndicator && (\n                <DevToolsIndicator\n                  scale={scale}\n                  setScale={setScale}\n                  state={state}\n                  dispatch={dispatch}\n                  errorCount={totalErrorCount}\n                  isBuildError={isBuildError}\n                />\n              )}\n\n              <ErrorOverlay\n                state={state}\n                dispatch={dispatch}\n                runtimeErrors={runtimeErrors}\n                errorCount={totalErrorCount}\n              />\n            </>\n          )\n        }}\n      </RenderError>\n    </ShadowPortal>\n  )\n}\n"],"names":["DevOverlay","state","dispatch","scale","setScale","useDevToolsScale","ShadowPortal","CssReset","Base","Colors","ComponentStyles","DarkTheme","RenderError","isAppDir","runtimeErrors","totalErrorCount","isBuildError","buildError","showIndicator","DevToolsIndicator","errorCount","ErrorOverlay"],"mappings":";;;;+BAagBA;;;eAAAA;;;;8BAXa;sBACR;iCACW;0BACP;wBACF;8BACM;mCACK;6BACN;2BACF;6BACO;AAE1B,SAASA,WAAW,KAM1B;IAN0B,IAAA,EACzBC,KAAK,EACLC,QAAQ,EAIT,GAN0B;IAOzB,MAAM,CAACC,OAAOC,SAAS,GAAGC,IAAAA,6BAAgB;IAC1C,qBACE,sBAACC,0BAAY;;0BACX,qBAACC,kBAAQ;0BACT,qBAACC,UAAI;gBAACL,OAAOA;;0BACb,qBAACM,cAAM;0BACP,qBAACC,gCAAe;0BAChB,qBAACC,oBAAS;0BAEV,qBAACC,wBAAW;gBAACX,OAAOA;gBAAOY,UAAU;0BAClC;wBAAC,EAAEC,aAAa,EAAEC,eAAe,EAAE;oBAClC,MAAMC,eAAef,MAAMgB,UAAU,KAAK;oBAC1C,qBACE;;4BACGhB,MAAMiB,aAAa,kBAClB,qBAACC,oCAAiB;gCAChBhB,OAAOA;gCACPC,UAAUA;gCACVH,OAAOA;gCACPC,UAAUA;gCACVkB,YAAYL;gCACZC,cAAcA;;0CAIlB,qBAACK,0BAAY;gCACXpB,OAAOA;gCACPC,UAAUA;gCACVY,eAAeA;gCACfM,YAAYL;;;;gBAIpB;;;;AAIR","ignoreList":[0]}