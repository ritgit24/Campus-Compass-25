{"version":3,"sources":["../../../../../../src/client/components/react-dev-overlay/ui/container/errors.tsx"],"sourcesContent":["import { useState, useMemo, useRef, Suspense } from 'react'\nimport type { DebugInfo } from '../../types'\nimport { Overlay } from '../components/overlay'\nimport { RuntimeError } from './runtime-error'\nimport { getErrorSource } from '../../../../../shared/lib/error-source'\nimport { HotlinkedText } from '../components/hot-linked-text'\nimport { PseudoHtmlDiff } from './runtime-error/component-stack-pseudo-html'\nimport { isConsoleError } from '../../../errors/console-error'\nimport { extractNextErrorCode } from '../../../../../lib/error-telemetry-utils'\nimport {\n  ErrorOverlayLayout,\n  type ErrorOverlayLayoutProps,\n} from '../components/errors/error-overlay-layout/error-overlay-layout'\nimport {\n  getHydrationErrorStackInfo,\n  isHydrationError,\n  NEXTJS_HYDRATION_ERROR_LINK,\n} from '../../../react-19-hydration-error'\nimport type { ReadyRuntimeError } from '../../utils/get-error-by-type'\nimport type { ErrorBaseProps } from '../components/errors/error-overlay/error-overlay'\nimport { getSquashedHydrationErrorDetails } from '../../pages/hydration-error-state'\nimport { isRecoverableError } from '../../../../react-client-callbacks/on-recoverable-error'\n\nexport interface ErrorsProps extends ErrorBaseProps {\n  runtimeErrors: ReadyRuntimeError[]\n  debugInfo: DebugInfo\n  onClose: () => void\n}\n\ntype ReadyErrorEvent = ReadyRuntimeError\n\nfunction isNextjsLink(text: string): boolean {\n  return text.startsWith('https://nextjs.org')\n}\n\nfunction HydrationErrorDescription({ message }: { message: string }) {\n  return <HotlinkedText text={message} matcher={isNextjsLink} />\n}\n\nfunction GenericErrorDescription({ error }: { error: Error }) {\n  const environmentName =\n    'environmentName' in error ? error.environmentName : ''\n  const envPrefix = environmentName ? `[ ${environmentName} ] ` : ''\n\n  // The environment name will be displayed as a label, so remove it\n  // from the message (e.g. \"[ Server ] hello world\" -> \"hello world\").\n  let message = error.message\n  if (message.startsWith(envPrefix)) {\n    message = message.slice(envPrefix.length)\n  }\n\n  return (\n    <>\n      <HotlinkedText text={message} matcher={isNextjsLink} />\n    </>\n  )\n}\n\nfunction getErrorType(error: Error): ErrorOverlayLayoutProps['errorType'] {\n  if (isRecoverableError(error)) {\n    return `Recoverable ${error.name}`\n  }\n  if (isConsoleError(error)) {\n    return `Console ${error.name}`\n  }\n  return `Runtime ${error.name}`\n}\n\nconst noErrorDetails = {\n  hydrationWarning: null,\n  notes: null,\n  reactOutputComponentDiff: null,\n}\nfunction useErrorDetails(error: Error | undefined): {\n  hydrationWarning: string | null\n  notes: string | null\n  reactOutputComponentDiff: string | null\n} {\n  return useMemo(() => {\n    if (error === undefined) {\n      return noErrorDetails\n    }\n\n    const pagesRouterErrorDetails = getSquashedHydrationErrorDetails(error)\n    if (pagesRouterErrorDetails !== null) {\n      return {\n        hydrationWarning: pagesRouterErrorDetails.warning ?? null,\n        notes: null,\n        reactOutputComponentDiff:\n          pagesRouterErrorDetails.reactOutputComponentDiff ?? null,\n      }\n    }\n\n    if (!isHydrationError(error)) {\n      return noErrorDetails\n    }\n\n    const { message, notes, diff } = getHydrationErrorStackInfo(error)\n    if (message === null) {\n      return noErrorDetails\n    }\n\n    return {\n      hydrationWarning: message,\n      notes,\n      reactOutputComponentDiff: diff,\n    }\n  }, [error])\n}\n\nexport function Errors({\n  runtimeErrors,\n  debugInfo,\n  onClose,\n  ...props\n}: ErrorsProps) {\n  const dialogResizerRef = useRef<HTMLDivElement | null>(null)\n\n  const isLoading = useMemo<boolean>(() => {\n    return runtimeErrors.length < 1\n  }, [runtimeErrors.length])\n\n  const [activeIdx, setActiveIndex] = useState<number>(0)\n\n  const activeError = useMemo<ReadyErrorEvent | null>(\n    () => runtimeErrors[activeIdx] ?? null,\n    [activeIdx, runtimeErrors]\n  )\n  const errorDetails = useErrorDetails(activeError?.error)\n\n  if (isLoading) {\n    // TODO: better loading state\n    return <Overlay />\n  }\n\n  if (!activeError) {\n    return null\n  }\n\n  const error = activeError.error\n  const isServerError = ['server', 'edge-server'].includes(\n    getErrorSource(error) || ''\n  )\n  const errorType = getErrorType(error)\n  // TOOD: May be better to always treat everything past the first blank line as notes\n  // We're currently only special casing hydration error messages.\n  const notes = errorDetails.notes\n  const hydrationWarning = errorDetails.hydrationWarning\n  const errorCode = extractNextErrorCode(error)\n\n  const footerMessage = isServerError\n    ? 'This error happened while generating the page. Any console logs will be displayed in the terminal window.'\n    : undefined\n\n  return (\n    <ErrorOverlayLayout\n      errorCode={errorCode}\n      errorType={errorType}\n      errorMessage={\n        hydrationWarning ? (\n          <HydrationErrorDescription message={hydrationWarning} />\n        ) : (\n          <GenericErrorDescription error={error} />\n        )\n      }\n      onClose={isServerError ? undefined : onClose}\n      debugInfo={debugInfo}\n      error={error}\n      runtimeErrors={runtimeErrors}\n      activeIdx={activeIdx}\n      setActiveIndex={setActiveIndex}\n      footerMessage={footerMessage}\n      dialogResizerRef={dialogResizerRef}\n      {...props}\n    >\n      <div className=\"error-overlay-notes-container\">\n        {notes ? (\n          <>\n            <p\n              id=\"nextjs__container_errors__notes\"\n              className=\"nextjs__container_errors__notes\"\n            >\n              {notes}\n            </p>\n          </>\n        ) : null}\n        {hydrationWarning ? (\n          <p\n            id=\"nextjs__container_errors__link\"\n            className=\"nextjs__container_errors__link\"\n          >\n            <HotlinkedText\n              text={`See more info here: ${NEXTJS_HYDRATION_ERROR_LINK}`}\n            />\n          </p>\n        ) : null}\n      </div>\n\n      {errorDetails.reactOutputComponentDiff ? (\n        <PseudoHtmlDiff\n          className=\"nextjs__container_errors__component-stack\"\n          reactOutputComponentDiff={errorDetails.reactOutputComponentDiff || ''}\n        />\n      ) : null}\n      <Suspense fallback={<div data-nextjs-error-suspended />}>\n        <RuntimeError\n          key={activeError.id.toString()}\n          error={activeError}\n          dialogResizerRef={dialogResizerRef}\n        />\n      </Suspense>\n    </ErrorOverlayLayout>\n  )\n}\n\nexport const styles = `\n  .nextjs-error-with-static {\n    bottom: calc(16px * 4.5);\n  }\n  p.nextjs__container_errors__link {\n    font-size: var(--size-14);\n  }\n  p.nextjs__container_errors__notes {\n    color: var(--color-stack-notes);\n    font-size: var(--size-14);\n    line-height: 1.5;\n  }\n  .nextjs-container-errors-body > h2:not(:first-child) {\n    margin-top: calc(16px + 8px);\n  }\n  .nextjs-container-errors-body > h2 {\n    color: var(--color-title-color);\n    margin-bottom: 8px;\n    font-size: var(--size-20);\n  }\n  .nextjs-toast-errors-parent {\n    cursor: pointer;\n    transition: transform 0.2s ease;\n  }\n  .nextjs-toast-errors-parent:hover {\n    transform: scale(1.1);\n  }\n  .nextjs-toast-errors {\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n  }\n  .nextjs-toast-errors > svg {\n    margin-right: 8px;\n  }\n  .nextjs-toast-hide-button {\n    margin-left: 24px;\n    border: none;\n    background: none;\n    color: var(--color-ansi-bright-white);\n    padding: 0;\n    transition: opacity 0.25s ease;\n    opacity: 0.7;\n  }\n  .nextjs-toast-hide-button:hover {\n    opacity: 1;\n  }\n  .nextjs__container_errors__error_title {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    margin-bottom: 14px;\n  }\n  .error-overlay-notes-container {\n    margin: 8px 2px;\n  }\n  .error-overlay-notes-container p {\n    white-space: pre-wrap;\n  }\n`\n"],"names":["Errors","styles","isNextjsLink","text","startsWith","HydrationErrorDescription","message","HotlinkedText","matcher","GenericErrorDescription","error","environmentName","envPrefix","slice","length","getErrorType","isRecoverableError","name","isConsoleError","noErrorDetails","hydrationWarning","notes","reactOutputComponentDiff","useErrorDetails","useMemo","undefined","pagesRouterErrorDetails","getSquashedHydrationErrorDetails","warning","isHydrationError","diff","getHydrationErrorStackInfo","runtimeErrors","debugInfo","onClose","props","dialogResizerRef","useRef","isLoading","activeIdx","setActiveIndex","useState","activeError","errorDetails","Overlay","isServerError","includes","getErrorSource","errorType","errorCode","extractNextErrorCode","footerMessage","ErrorOverlayLayout","errorMessage","div","className","p","id","NEXTJS_HYDRATION_ERROR_LINK","PseudoHtmlDiff","Suspense","fallback","data-nextjs-error-suspended","RuntimeError","toString"],"mappings":"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","ignoreList":[0]}