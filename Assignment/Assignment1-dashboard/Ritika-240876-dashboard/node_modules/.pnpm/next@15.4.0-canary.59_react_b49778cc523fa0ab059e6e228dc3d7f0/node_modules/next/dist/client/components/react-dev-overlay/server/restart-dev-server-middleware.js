"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "getRestartDevServerMiddleware", {
    enumerable: true,
    get: function() {
        return getRestartDevServerMiddleware;
    }
});
const _utils = require("../../../../server/lib/utils");
const _middlewareresponse = require("./middleware-response");
const EVENT_DEV_OVERLAY_RESTART_SERVER = 'DEV_OVERLAY_RESTART_SERVER';
function getRestartDevServerMiddleware(telemetry) {
    return async function(req, res, next) {
        const { pathname } = new URL("http://n" + req.url);
        if (pathname !== '/__nextjs_restart_dev' || req.method !== 'POST') {
            return next();
        }
        telemetry.record({
            eventName: EVENT_DEV_OVERLAY_RESTART_SERVER,
            payload: {}
        });
        // TODO: Use flushDetached
        await telemetry.flush();
        // do this async to try to give the response a chance to send
        // it's not really important if it doesn't though
        setTimeout(()=>{
            process.exit(_utils.RESTART_EXIT_CODE);
        }, 0);
        return _middlewareresponse.middlewareResponse.noContent(res);
    };
}

if ((typeof exports.default === 'function' || (typeof exports.default === 'object' && exports.default !== null)) && typeof exports.default.__esModule === 'undefined') {
  Object.defineProperty(exports.default, '__esModule', { value: true });
  Object.assign(exports.default, exports);
  module.exports = exports.default;
}

//# sourceMappingURL=restart-dev-server-middleware.js.map