{"version":3,"sources":["../../../../src/client/components/react-dev-overlay/shared.ts"],"sourcesContent":["import { useReducer } from 'react'\n\nimport type { StackFrame } from 'next/dist/compiled/stacktrace-parser'\nimport type { VersionInfo } from '../../../server/dev/parse-version-info'\nimport type { SupportedErrorEvent } from './ui/container/runtime-error/render-error'\nimport type { ComponentStackFrame } from './utils/parse-component-stack'\nimport type { DebugInfo } from './types'\nimport type { DevIndicatorServerState } from '../../../server/dev/dev-indicator-server-state'\nimport type { HMR_ACTION_TYPES } from '../../../server/dev/hot-reloader-types'\nimport { getOwnerStack } from '../errors/stitched-error'\n\ntype FastRefreshState =\n  /** No refresh in progress. */\n  | { type: 'idle' }\n  /** The refresh process has been triggered, but the new code has not been executed yet. */\n  | { type: 'pending'; errors: SupportedErrorEvent[] }\n\nexport interface OverlayState {\n  nextId: number\n  buildError: string | null\n  errors: SupportedErrorEvent[]\n  refreshState: FastRefreshState\n  versionInfo: VersionInfo\n  notFound: boolean\n  staticIndicator: boolean\n  showIndicator: boolean\n  disableDevIndicator: boolean\n  debugInfo: DebugInfo\n  routerType: 'pages' | 'app'\n  isErrorOverlayOpen: boolean\n}\nexport type OverlayDispatch = React.Dispatch<BusEvent>\n\nexport const ACTION_STATIC_INDICATOR = 'static-indicator'\nexport const ACTION_BUILD_OK = 'build-ok'\nexport const ACTION_BUILD_ERROR = 'build-error'\nexport const ACTION_BEFORE_REFRESH = 'before-fast-refresh'\nexport const ACTION_REFRESH = 'fast-refresh'\nexport const ACTION_VERSION_INFO = 'version-info'\nexport const ACTION_UNHANDLED_ERROR = 'unhandled-error'\nexport const ACTION_UNHANDLED_REJECTION = 'unhandled-rejection'\nexport const ACTION_DEBUG_INFO = 'debug-info'\nexport const ACTION_DEV_INDICATOR = 'dev-indicator'\nexport const ACTION_ERROR_OVERLAY_OPEN = 'error-overlay-open'\nexport const ACTION_ERROR_OVERLAY_CLOSE = 'error-overlay-close'\nexport const ACTION_ERROR_OVERLAY_TOGGLE = 'error-overlay-toggle'\n\nexport const STORAGE_KEY_THEME = '__nextjs-dev-tools-theme'\nexport const STORAGE_KEY_POSITION = '__nextjs-dev-tools-position'\nexport const STORAGE_KEY_SCALE = '__nextjs-dev-tools-scale'\n\ninterface StaticIndicatorAction {\n  type: typeof ACTION_STATIC_INDICATOR\n  staticIndicator: boolean\n}\n\ninterface BuildOkAction {\n  type: typeof ACTION_BUILD_OK\n}\ninterface BuildErrorAction {\n  type: typeof ACTION_BUILD_ERROR\n  message: string\n}\ninterface BeforeFastRefreshAction {\n  type: typeof ACTION_BEFORE_REFRESH\n}\ninterface FastRefreshAction {\n  type: typeof ACTION_REFRESH\n}\n\nexport interface UnhandledErrorAction {\n  type: typeof ACTION_UNHANDLED_ERROR\n  reason: Error\n  frames: StackFrame[]\n  componentStackFrames?: ComponentStackFrame[]\n}\nexport interface UnhandledRejectionAction {\n  type: typeof ACTION_UNHANDLED_REJECTION\n  reason: Error\n  frames: StackFrame[]\n}\n\nexport interface DebugInfoAction {\n  type: typeof ACTION_DEBUG_INFO\n  debugInfo: any\n}\n\ninterface VersionInfoAction {\n  type: typeof ACTION_VERSION_INFO\n  versionInfo: VersionInfo\n}\n\ninterface DevIndicatorAction {\n  type: typeof ACTION_DEV_INDICATOR\n  devIndicator: DevIndicatorServerState\n}\n\nexport interface ErrorOverlayOpenAction {\n  type: typeof ACTION_ERROR_OVERLAY_OPEN\n}\nexport interface ErrorOverlayCloseAction {\n  type: typeof ACTION_ERROR_OVERLAY_CLOSE\n}\nexport interface ErrorOverlayToggleAction {\n  type: typeof ACTION_ERROR_OVERLAY_TOGGLE\n}\n\nexport type BusEvent =\n  | BuildOkAction\n  | BuildErrorAction\n  | BeforeFastRefreshAction\n  | FastRefreshAction\n  | UnhandledErrorAction\n  | UnhandledRejectionAction\n  | VersionInfoAction\n  | StaticIndicatorAction\n  | DebugInfoAction\n  | DevIndicatorAction\n  | ErrorOverlayOpenAction\n  | ErrorOverlayCloseAction\n  | ErrorOverlayToggleAction\n\nconst REACT_ERROR_STACK_BOTTOM_FRAME_REGEX =\n  // 1st group: v8\n  // 2nd group: SpiderMonkey, JavaScriptCore\n  /\\s+(at react-stack-bottom-frame.*)|(react-stack-bottom-frame@.*)/\n\n// React calls user code starting from a special stack frame.\n// The basic stack will be different if the same error location is hit again\n// due to StrictMode.\n// This gets only the stack after React which is unaffected by StrictMode.\nfunction getStackIgnoringStrictMode(stack: string | undefined) {\n  return stack?.split(REACT_ERROR_STACK_BOTTOM_FRAME_REGEX)[0]\n}\n\nfunction pushErrorFilterDuplicates(\n  errors: SupportedErrorEvent[],\n  err: SupportedErrorEvent\n): SupportedErrorEvent[] {\n  const pendingErrors = errors.filter((e) => {\n    // Filter out duplicate errors\n    return (\n      (e.event.reason.stack !== err.event.reason.stack &&\n        // TODO: Let ReactDevTools control deduping instead?\n        getStackIgnoringStrictMode(e.event.reason.stack) !==\n          getStackIgnoringStrictMode(err.event.reason.stack)) ||\n      getOwnerStack(e.event.reason) !== getOwnerStack(err.event.reason)\n    )\n  })\n  pendingErrors.push(err)\n  return pendingErrors\n}\n\nconst shouldDisableDevIndicator =\n  process.env.__NEXT_DEV_INDICATOR?.toString() === 'false'\n\nexport const INITIAL_OVERLAY_STATE: Omit<\n  OverlayState,\n  'isErrorOverlayOpen' | 'routerType'\n> = {\n  nextId: 1,\n  buildError: null,\n  errors: [],\n  notFound: false,\n  staticIndicator: false,\n  /* \n    This is set to `true` when we can reliably know\n    whether the indicator is in disabled state or not.  \n    Otherwise the surface would flicker because the disabled flag loads from the config.\n  */\n  showIndicator: false,\n  disableDevIndicator: false,\n  refreshState: { type: 'idle' },\n  versionInfo: { installed: '0.0.0', staleness: 'unknown' },\n  debugInfo: { devtoolsFrontendUrl: undefined },\n}\n\nfunction getInitialState(\n  routerType: 'pages' | 'app'\n): OverlayState & { routerType: 'pages' | 'app' } {\n  return {\n    ...INITIAL_OVERLAY_STATE,\n    // Pages Router only listenes to thrown errors which\n    // always open the overlay.\n    // TODO: Should be the same default as App Router once we surface console.error in Pages Router.\n    isErrorOverlayOpen: routerType === 'pages',\n    routerType,\n  }\n}\n\nexport function useErrorOverlayReducer(routerType: 'pages' | 'app') {\n  return useReducer((state: OverlayState, action: BusEvent): OverlayState => {\n    switch (action.type) {\n      case ACTION_DEBUG_INFO: {\n        return { ...state, debugInfo: action.debugInfo }\n      }\n      case ACTION_STATIC_INDICATOR: {\n        return { ...state, staticIndicator: action.staticIndicator }\n      }\n      case ACTION_BUILD_OK: {\n        return { ...state, buildError: null }\n      }\n      case ACTION_BUILD_ERROR: {\n        return { ...state, buildError: action.message }\n      }\n      case ACTION_BEFORE_REFRESH: {\n        return { ...state, refreshState: { type: 'pending', errors: [] } }\n      }\n      case ACTION_REFRESH: {\n        return {\n          ...state,\n          buildError: null,\n          errors:\n            // Errors can come in during updates. In this case, UNHANDLED_ERROR\n            // and UNHANDLED_REJECTION events might be dispatched between the\n            // BEFORE_REFRESH and the REFRESH event. We want to keep those errors\n            // around until the next refresh. Otherwise we run into a race\n            // condition where those errors would be cleared on refresh completion\n            // before they can be displayed.\n            state.refreshState.type === 'pending'\n              ? state.refreshState.errors\n              : [],\n          refreshState: { type: 'idle' },\n        }\n      }\n      case ACTION_UNHANDLED_ERROR:\n      case ACTION_UNHANDLED_REJECTION: {\n        switch (state.refreshState.type) {\n          case 'idle': {\n            return {\n              ...state,\n              nextId: state.nextId + 1,\n              errors: pushErrorFilterDuplicates(state.errors, {\n                id: state.nextId,\n                event: action,\n              }),\n            }\n          }\n          case 'pending': {\n            return {\n              ...state,\n              nextId: state.nextId + 1,\n              refreshState: {\n                ...state.refreshState,\n                errors: pushErrorFilterDuplicates(state.refreshState.errors, {\n                  id: state.nextId,\n                  event: action,\n                }),\n              },\n            }\n          }\n          default:\n            return state\n        }\n      }\n      case ACTION_VERSION_INFO: {\n        return { ...state, versionInfo: action.versionInfo }\n      }\n      case ACTION_DEV_INDICATOR: {\n        return {\n          ...state,\n          showIndicator: true,\n          disableDevIndicator:\n            shouldDisableDevIndicator || !!action.devIndicator.disabledUntil,\n        }\n      }\n      case ACTION_ERROR_OVERLAY_OPEN: {\n        return { ...state, isErrorOverlayOpen: true }\n      }\n      case ACTION_ERROR_OVERLAY_CLOSE: {\n        return { ...state, isErrorOverlayOpen: false }\n      }\n      case ACTION_ERROR_OVERLAY_TOGGLE: {\n        return { ...state, isErrorOverlayOpen: !state.isErrorOverlayOpen }\n      }\n      default: {\n        return state\n      }\n    }\n  }, getInitialState(routerType))\n}\n\nexport const REACT_REFRESH_FULL_RELOAD =\n  '[Fast Refresh] performing full reload\\n\\n' +\n  \"Fast Refresh will perform a full reload when you edit a file that's imported by modules outside of the React rendering tree.\\n\" +\n  'You might have a file which exports a React component but also exports a value that is imported by a non-React component file.\\n' +\n  'Consider migrating the non-React component export to a separate file and importing it into both files.\\n\\n' +\n  'It is also possible the parent component of the component you edited is a class component, which disables Fast Refresh.\\n' +\n  'Fast Refresh requires at least one parent function component in your React tree.'\n\nexport const REACT_REFRESH_FULL_RELOAD_FROM_ERROR =\n  '[Fast Refresh] performing full reload because your application had an unrecoverable error'\n\nexport function reportInvalidHmrMessage(\n  message: HMR_ACTION_TYPES | MessageEvent<unknown>,\n  err: unknown\n) {\n  console.warn(\n    '[HMR] Invalid message: ' +\n      JSON.stringify(message) +\n      '\\n' +\n      ((err instanceof Error && err?.stack) || '')\n  )\n}\n"],"names":["ACTION_BEFORE_REFRESH","ACTION_BUILD_ERROR","ACTION_BUILD_OK","ACTION_DEBUG_INFO","ACTION_DEV_INDICATOR","ACTION_ERROR_OVERLAY_CLOSE","ACTION_ERROR_OVERLAY_OPEN","ACTION_ERROR_OVERLAY_TOGGLE","ACTION_REFRESH","ACTION_STATIC_INDICATOR","ACTION_UNHANDLED_ERROR","ACTION_UNHANDLED_REJECTION","ACTION_VERSION_INFO","INITIAL_OVERLAY_STATE","REACT_REFRESH_FULL_RELOAD","REACT_REFRESH_FULL_RELOAD_FROM_ERROR","STORAGE_KEY_POSITION","STORAGE_KEY_SCALE","STORAGE_KEY_THEME","reportInvalidHmrMessage","useErrorOverlayReducer","process","REACT_ERROR_STACK_BOTTOM_FRAME_REGEX","getStackIgnoringStrictMode","stack","split","pushErrorFilterDuplicates","errors","err","pendingErrors","filter","e","event","reason","getOwnerStack","push","shouldDisableDevIndicator","env","__NEXT_DEV_INDICATOR","toString","nextId","buildError","notFound","staticIndicator","showIndicator","disableDevIndicator","refreshState","type","versionInfo","installed","staleness","debugInfo","devtoolsFrontendUrl","undefined","getInitialState","routerType","isErrorOverlayOpen","useReducer","state","action","message","id","devIndicator","disabledUntil","console","warn","JSON","stringify","Error"],"mappings":"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","ignoreList":[0]}