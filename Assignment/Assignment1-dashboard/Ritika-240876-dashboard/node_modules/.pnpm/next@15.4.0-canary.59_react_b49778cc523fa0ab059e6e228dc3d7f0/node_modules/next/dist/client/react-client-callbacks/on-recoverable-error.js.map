{"version":3,"sources":["../../../src/client/react-client-callbacks/on-recoverable-error.ts"],"sourcesContent":["// This module can be shared between both pages router and app router\n\nimport type { HydrationOptions } from 'react-dom/client'\nimport { isBailoutToCSRError } from '../../shared/lib/lazy-dynamic/bailout-to-csr'\nimport {\n  setOwnerStackIfAvailable,\n  setComponentStack,\n  coerceError,\n} from '../components/errors/stitched-error'\nimport isError from '../../lib/is-error'\nimport { reportGlobalError } from './report-global-error'\n\nconst recoverableErrors = new WeakSet<Error>()\n\nexport function isRecoverableError(error: Error): boolean {\n  return recoverableErrors.has(error)\n}\n\nexport const onRecoverableError: HydrationOptions['onRecoverableError'] = (\n  error,\n  errorInfo\n) => {\n  // x-ref: https://github.com/facebook/react/pull/28736\n  const cause = isError(error) && 'cause' in error ? error.cause : error\n  // Skip certain custom errors which are not expected to be reported on client\n  if (isBailoutToCSRError(cause)) return\n\n  const causeError = coerceError(cause)\n  recoverableErrors.add(causeError)\n  setOwnerStackIfAvailable(causeError)\n\n  if (process.env.NODE_ENV === 'development' && errorInfo.componentStack) {\n    setComponentStack(causeError, errorInfo.componentStack)\n  }\n\n  reportGlobalError(causeError)\n}\n"],"names":["isRecoverableError","onRecoverableError","recoverableErrors","WeakSet","error","has","errorInfo","cause","isError","isBailoutToCSRError","causeError","coerceError","add","setOwnerStackIfAvailable","process","env","NODE_ENV","componentStack","setComponentStack","reportGlobalError"],"mappings":"AAAA,qEAAqE;;;;;;;;;;;;;;;;IAcrDA,kBAAkB;eAAlBA;;IAIHC,kBAAkB;eAAlBA;;;;8BAfuB;+BAK7B;kEACa;mCACc;AAElC,MAAMC,oBAAoB,IAAIC;AAEvB,SAASH,mBAAmBI,KAAY;IAC7C,OAAOF,kBAAkBG,GAAG,CAACD;AAC/B;AAEO,MAAMH,qBAA6D,CACxEG,OACAE;IAEA,sDAAsD;IACtD,MAAMC,QAAQC,IAAAA,gBAAO,EAACJ,UAAU,WAAWA,QAAQA,MAAMG,KAAK,GAAGH;IACjE,6EAA6E;IAC7E,IAAIK,IAAAA,iCAAmB,EAACF,QAAQ;IAEhC,MAAMG,aAAaC,IAAAA,0BAAW,EAACJ;IAC/BL,kBAAkBU,GAAG,CAACF;IACtBG,IAAAA,uCAAwB,EAACH;IAEzB,IAAII,QAAQC,GAAG,CAACC,QAAQ,KAAK,iBAAiBV,UAAUW,cAAc,EAAE;QACtEC,IAAAA,gCAAiB,EAACR,YAAYJ,UAAUW,cAAc;IACxD;IAEAE,IAAAA,oCAAiB,EAACT;AACpB","ignoreList":[0]}