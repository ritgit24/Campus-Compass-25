{"version":3,"sources":["../../../../src/shared/lib/devtool/trie.ts"],"sourcesContent":["/**\n * Trie data structure for storing and searching paths\n *\n * This can be used to store app router paths and search for them efficiently.\n * e.g.\n *\n * [trie root]\n *   ├── layout.js\n *   ├── page.js\n *   ├── blog\n *       ├── layout.js\n *       ├── page.js\n *       ├── [slug]\n *          ├── layout.js\n *          ├── page.js\n **/\n\nexport type TrieNode<Value = string> = {\n  value?: Value\n  children: {\n    [key: string]: TrieNode<Value> | undefined\n  }\n}\n\nexport type Trie<Value = string> = {\n  insert: (value: Value) => void\n  getRoot: () => TrieNode<Value>\n}\n\nexport function createTrie<Value = string>({\n  getKey = (k) => k as unknown as string,\n}: {\n  getKey: (k: Value) => string\n}): Trie<Value> {\n  const root: TrieNode<Value> = {\n    value: undefined,\n    children: {},\n  }\n\n  function insert(value: Value) {\n    let currentNode = root\n    const key = getKey(value)\n    const segments = key.split('/')\n\n    for (const segment of segments) {\n      if (!currentNode.children[segment]) {\n        currentNode.children[segment] = {\n          // Skip value for intermediate nodes\n          children: {},\n        }\n      }\n      currentNode = currentNode.children[segment]\n    }\n\n    currentNode.value = value\n  }\n\n  function getRoot(): TrieNode<Value> {\n    return root\n  }\n\n  return { insert, getRoot }\n}\n"],"names":["createTrie","getKey","k","root","value","undefined","children","insert","currentNode","key","segments","split","segment","getRoot"],"mappings":"AAAA;;;;;;;;;;;;;;;EAeE;;;;+BAccA;;;eAAAA;;;AAAT,SAASA,WAA2B,KAI1C;IAJ0C,IAAA,EACzCC,SAAS,CAACC,IAAMA,CAAsB,EAGvC,GAJ0C;IAKzC,MAAMC,OAAwB;QAC5BC,OAAOC;QACPC,UAAU,CAAC;IACb;IAEA,SAASC,OAAOH,KAAY;QAC1B,IAAII,cAAcL;QAClB,MAAMM,MAAMR,OAAOG;QACnB,MAAMM,WAAWD,IAAIE,KAAK,CAAC;QAE3B,KAAK,MAAMC,WAAWF,SAAU;YAC9B,IAAI,CAACF,YAAYF,QAAQ,CAACM,QAAQ,EAAE;gBAClCJ,YAAYF,QAAQ,CAACM,QAAQ,GAAG;oBAC9B,oCAAoC;oBACpCN,UAAU,CAAC;gBACb;YACF;YACAE,cAAcA,YAAYF,QAAQ,CAACM,QAAQ;QAC7C;QAEAJ,YAAYJ,KAAK,GAAGA;IACtB;IAEA,SAASS;QACP,OAAOV;IACT;IAEA,OAAO;QAAEI;QAAQM;IAAQ;AAC3B","ignoreList":[0]}