{"version":3,"sources":["../../../src/build/templates/pages.ts"],"sourcesContent":["import type { IncomingMessage, ServerResponse } from 'node:http'\nimport type RenderResult from '../../server/render-result'\nimport type { ParsedUrlQuery } from 'node:querystring'\nimport { PagesRouteModule } from '../../server/route-modules/pages/module.compiled'\nimport { RouteKind } from '../../server/route-kind'\nimport { BaseServerSpan } from '../../server/lib/trace/constants'\nimport { getTracer, SpanKind, type Span } from '../../server/lib/trace/tracer'\nimport { formatUrl } from '../../shared/lib/router/utils/format-url'\nimport {\n  RouterServerContextSymbol,\n  routerServerGlobal,\n} from '../../server/lib/router-utils/router-server-context'\nimport { getRequestMeta } from '../../server/request-meta'\nimport { interopDefault } from '../../server/app-render/interop-default'\nimport { getRevalidateReason } from '../../server/instrumentation/utils'\nimport { normalizeDataPath } from '../../shared/lib/page-path/normalize-data-path'\nimport { hoist } from './helpers'\n\n// Import the app and document modules.\nimport * as document from 'VAR_MODULE_DOCUMENT'\nimport * as app from 'VAR_MODULE_APP'\n\n// Import the userland code.\nimport * as userland from 'VAR_USERLAND'\n\n// Re-export the component (should be the default export).\nexport default hoist(userland, 'default')\n\n// Re-export methods.\nexport const getStaticProps = hoist(userland, 'getStaticProps')\nexport const getStaticPaths = hoist(userland, 'getStaticPaths')\nexport const getServerSideProps = hoist(userland, 'getServerSideProps')\nexport const config = hoist(userland, 'config')\nexport const reportWebVitals = hoist(userland, 'reportWebVitals')\n\n// Re-export legacy methods.\nexport const unstable_getStaticProps = hoist(\n  userland,\n  'unstable_getStaticProps'\n)\nexport const unstable_getStaticPaths = hoist(\n  userland,\n  'unstable_getStaticPaths'\n)\nexport const unstable_getStaticParams = hoist(\n  userland,\n  'unstable_getStaticParams'\n)\nexport const unstable_getServerProps = hoist(\n  userland,\n  'unstable_getServerProps'\n)\nexport const unstable_getServerSideProps = hoist(\n  userland,\n  'unstable_getServerSideProps'\n)\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new PagesRouteModule({\n  definition: {\n    kind: RouteKind.PAGES,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n  },\n  distDir: process.env.__NEXT_RELATIVE_DIST_DIR || '',\n  projectDir: process.env.__NEXT_RELATIVE_PROJECT_DIR || '',\n  components: {\n    // default export might not exist when optimized for data only\n    App: app.default,\n    Document: document.default,\n  },\n  userland,\n})\n\nexport async function handler(\n  req: IncomingMessage,\n  res: ServerResponse,\n  ctx: {\n    waitUntil: (prom: Promise<void>) => void\n  }\n): Promise<RenderResult | null> {\n  let srcPage = 'VAR_DEFINITION_PAGE'\n\n  // turbopack doesn't normalize `/index` in the page name\n  // so we need to to process dynamic routes properly\n  // TODO: fix turbopack providing differing value from webpack\n  if (process.env.TURBOPACK) {\n    srcPage = srcPage.replace(/\\/index$/, '') || '/'\n  } else if (srcPage === '/index') {\n    // we always normalize /index specifically\n    srcPage = '/'\n  }\n  const multiZoneDraftMode = process.env\n    .__NEXT_MULTI_ZONE_DRAFT_MODE as any as boolean\n\n  const prepareResult = await routeModule.prepare(req, res, {\n    srcPage,\n    multiZoneDraftMode,\n  })\n\n  if (!prepareResult) {\n    res.statusCode = 400\n    res.end('Bad Request')\n    ctx.waitUntil?.(Promise.resolve())\n    return null\n  }\n\n  const {\n    buildId,\n    query,\n    params,\n    parsedUrl,\n    originalQuery,\n    originalPathname,\n    buildManifest,\n    nextFontManifest,\n    isNextDataRequest,\n    serverFilesManifest,\n    reactLoadableManifest,\n    prerenderManifest,\n    isDraftMode,\n    isOnDemandRevalidate,\n    locale,\n    locales,\n    defaultLocale,\n  } = prepareResult\n\n  const routerServerContext =\n    routerServerGlobal[RouterServerContextSymbol]?.[\n      process.env.__NEXT_RELATIVE_PROJECT_DIR || ''\n    ]\n\n  const onError = routeModule.instrumentationOnRequestError.bind(routeModule)\n  const nextConfig =\n    routerServerContext?.nextConfig || serverFilesManifest.config\n\n  const isExperimentalCompile =\n    serverFilesManifest?.config?.experimental?.isExperimentalCompile\n\n  const isIsrFallback = Boolean(getRequestMeta(req, 'isIsrFallback'))\n  const hasServerProps = Boolean(getServerSideProps)\n  const hasStaticProps = Boolean(getStaticProps)\n  const hasGetInitialProps = Boolean(\n    (userland.default || userland).getInitialProps\n  )\n\n  try {\n    const method = req.method || 'GET'\n    const tracer = getTracer()\n\n    const activeSpan = tracer.getActiveScopeSpan()\n    const resolvedUrl = formatUrl({\n      pathname: parsedUrl.pathname,\n      // make sure to only add query values from original URL\n      query: hasStaticProps ? {} : originalQuery,\n    })\n\n    const publicRuntimeConfig: Record<string, string> =\n      routerServerContext?.publicRuntimeConfig || nextConfig.publicRuntimeConfig\n\n    const invokeRouteModule = async (span?: Span) =>\n      routeModule\n        .render(req, res, {\n          query:\n            hasStaticProps && !isExperimentalCompile\n              ? ({\n                  ...params,\n                  ...(query.amp && config.amp\n                    ? {\n                        amp: query.amp as string,\n                      }\n                    : {}),\n                } as ParsedUrlQuery)\n              : {\n                  ...query,\n                  ...params,\n                },\n          params,\n          page: srcPage,\n          renderContext: {\n            isDraftMode,\n            isFallback: isIsrFallback,\n            developmentNotFoundSourcePage: getRequestMeta(\n              req,\n              'developmentNotFoundSourcePage'\n            ),\n          },\n          sharedContext: {\n            buildId,\n            customServer:\n              Boolean(routerServerContext?.isCustomServer) || undefined,\n            deploymentId: process.env.NEXT_DEPLOYMENT_ID,\n          },\n          renderOpts: {\n            params,\n            routeModule,\n            page: srcPage,\n            pageConfig: config || {},\n            Component: interopDefault(userland),\n            ComponentMod: userland,\n            getStaticProps,\n            getStaticPaths,\n            getServerSideProps,\n            supportsDynamicResponse: !hasStaticProps,\n            buildManifest,\n            nextFontManifest,\n            reactLoadableManifest,\n\n            assetPrefix: nextConfig.assetPrefix,\n            strictNextHead: Boolean(nextConfig.experimental.strictNextHead),\n            previewProps: prerenderManifest.preview,\n            images: nextConfig.images as any,\n            nextConfigOutput: nextConfig.output,\n            optimizeCss: Boolean(nextConfig.experimental.optimizeCss),\n            nextScriptWorkers: Boolean(\n              nextConfig.experimental.nextScriptWorkers\n            ),\n            domainLocales: nextConfig.i18n?.domains,\n            crossOrigin: nextConfig.crossOrigin,\n\n            multiZoneDraftMode,\n            basePath: nextConfig.basePath,\n            canonicalBase: nextConfig.amp.canonicalBase || '',\n            ampOptimizerConfig: nextConfig.experimental.amp?.optimizer,\n            disableOptimizedLoading:\n              nextConfig.experimental.disableOptimizedLoading,\n            largePageDataBytes: nextConfig.experimental.largePageDataBytes,\n            // Only the `publicRuntimeConfig` key is exposed to the client side\n            // It'll be rendered as part of __NEXT_DATA__ on the client side\n            runtimeConfig:\n              Object.keys(publicRuntimeConfig).length > 0\n                ? publicRuntimeConfig\n                : undefined,\n\n            isExperimentalCompile,\n\n            experimental: {\n              clientTraceMetadata:\n                nextConfig.experimental.clientTraceMetadata || ([] as any),\n            },\n\n            locale,\n            locales,\n            defaultLocale,\n\n            isNextDataRequest:\n              isNextDataRequest && (hasServerProps || hasStaticProps),\n\n            resolvedUrl,\n            // For getServerSideProps and getInitialProps we need to ensure we use the original URL\n            // and not the resolved URL to prevent a hydration mismatch on\n            // asPath\n            resolvedAsPath:\n              hasServerProps || hasGetInitialProps\n                ? formatUrl({\n                    // we use the original URL pathname less the _next/data prefix if\n                    // present\n                    pathname: isNextDataRequest\n                      ? normalizeDataPath(originalPathname)\n                      : originalPathname,\n                    query: originalQuery,\n                  })\n                : resolvedUrl,\n\n            isOnDemandRevalidate,\n\n            ErrorDebug: getRequestMeta(req, 'PagesErrorDebug'),\n            err: getRequestMeta(req, 'invokeError'),\n            dev: routeModule.isDev,\n\n            // needed for experimental.optimizeCss feature\n            distDir: `${routeModule.projectDir}/${routeModule.distDir}`,\n\n            ampSkipValidation: nextConfig.experimental.amp?.skipValidation,\n            ampValidator: getRequestMeta(req, 'ampValidator'),\n          },\n        })\n        .finally(() => {\n          if (!span) return\n\n          span.setAttributes({\n            'http.status_code': res.statusCode,\n            'next.rsc': false,\n          })\n\n          const rootSpanAttributes = tracer.getRootSpanAttributes()\n          // We were unable to get attributes, probably OTEL is not enabled\n          if (!rootSpanAttributes) {\n            return\n          }\n\n          if (\n            rootSpanAttributes.get('next.span_type') !==\n            BaseServerSpan.handleRequest\n          ) {\n            console.warn(\n              `Unexpected root span type '${rootSpanAttributes.get(\n                'next.span_type'\n              )}'. Please report this Next.js issue https://github.com/vercel/next.js`\n            )\n            return\n          }\n\n          const route = rootSpanAttributes.get('next.route')\n          if (route) {\n            const name = `${method} ${route}`\n\n            span.setAttributes({\n              'next.route': route,\n              'http.route': route,\n              'next.span_name': name,\n            })\n            span.updateName(name)\n          } else {\n            span.updateName(`${method} ${req.url}`)\n          }\n        })\n\n    // TODO: activeSpan code path is for when wrapped by\n    // next-server can be removed when this is no longer used\n    if (activeSpan) {\n      return await invokeRouteModule(activeSpan)\n    } else {\n      return await tracer.withPropagatedContext(req.headers, () =>\n        tracer.trace(\n          BaseServerSpan.handleRequest,\n          {\n            spanName: `${method} ${req.url}`,\n            kind: SpanKind.SERVER,\n            attributes: {\n              'http.method': method,\n              'http.target': req.url,\n            },\n          },\n          invokeRouteModule\n        )\n      )\n    }\n  } catch (err) {\n    await onError(\n      req,\n      err,\n      {\n        path: req.url || '/',\n        headers: req.headers,\n        method: req.method || 'GET',\n      },\n      {\n        routerKind: 'Pages Router',\n        routePath: srcPage,\n        routeType: 'render',\n        revalidateReason: getRevalidateReason({\n          isRevalidate: hasStaticProps,\n          isOnDemandRevalidate,\n        }),\n      }\n    )\n\n    // rethrow so that we can handle serving error page\n    throw err\n  } finally {\n    // We don't allow any waitUntil work in pages API routes currently\n    // so if callback is present return with resolved promise since no\n    // pending work\n    ctx.waitUntil?.(Promise.resolve())\n  }\n}\n"],"names":["PagesRouteModule","RouteKind","BaseServerSpan","getTracer","SpanKind","formatUrl","RouterServerContextSymbol","routerServerGlobal","getRequestMeta","interopDefault","getRevalidateReason","normalizeDataPath","hoist","document","app","userland","getStaticProps","getStaticPaths","getServerSideProps","config","reportWebVitals","unstable_getStaticProps","unstable_getStaticPaths","unstable_getStaticParams","unstable_getServerProps","unstable_getServerSideProps","routeModule","definition","kind","PAGES","page","pathname","bundlePath","filename","distDir","process","env","__NEXT_RELATIVE_DIST_DIR","projectDir","__NEXT_RELATIVE_PROJECT_DIR","components","App","default","Document","handler","req","res","ctx","serverFilesManifest","srcPage","TURBOPACK","replace","multiZoneDraftMode","__NEXT_MULTI_ZONE_DRAFT_MODE","prepareResult","prepare","statusCode","end","waitUntil","Promise","resolve","buildId","query","params","parsedUrl","originalQuery","originalPathname","buildManifest","nextFontManifest","isNextDataRequest","reactLoadableManifest","prerenderManifest","isDraftMode","isOnDemandRevalidate","locale","locales","defaultLocale","routerServerContext","onError","instrumentationOnRequestError","bind","nextConfig","isExperimentalCompile","experimental","isIsrFallback","Boolean","hasServerProps","hasStaticProps","hasGetInitialProps","getInitialProps","method","tracer","activeSpan","getActiveScopeSpan","resolvedUrl","publicRuntimeConfig","invokeRouteModule","span","render","amp","renderContext","isFallback","developmentNotFoundSourcePage","sharedContext","customServer","isCustomServer","undefined","deploymentId","NEXT_DEPLOYMENT_ID","renderOpts","pageConfig","Component","ComponentMod","supportsDynamicResponse","assetPrefix","strictNextHead","previewProps","preview","images","nextConfigOutput","output","optimizeCss","nextScriptWorkers","domainLocales","i18n","domains","crossOrigin","basePath","canonicalBase","ampOptimizerConfig","optimizer","disableOptimizedLoading","largePageDataBytes","runtimeConfig","Object","keys","length","clientTraceMetadata","resolvedAsPath","ErrorDebug","err","dev","isDev","ampSkipValidation","skipValidation","ampValidator","finally","setAttributes","rootSpanAttributes","getRootSpanAttributes","get","handleRequest","console","warn","route","name","updateName","url","withPropagatedContext","headers","trace","spanName","SERVER","attributes","path","routerKind","routePath","routeType","revalidateReason","isRevalidate"],"mappings":"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","ignoreList":[0]}