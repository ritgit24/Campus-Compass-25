{"version":3,"sources":["../../../src/build/templates/pages.ts"],"sourcesContent":["import type { IncomingMessage, ServerResponse } from 'node:http'\nimport type RenderResult from '../../server/render-result'\nimport type { ParsedUrlQuery } from 'node:querystring'\nimport { PagesRouteModule } from '../../server/route-modules/pages/module.compiled'\nimport { RouteKind } from '../../server/route-kind'\nimport { BaseServerSpan } from '../../server/lib/trace/constants'\nimport { getTracer, SpanKind, type Span } from '../../server/lib/trace/tracer'\nimport { formatUrl } from '../../shared/lib/router/utils/format-url'\nimport {\n  RouterServerContextSymbol,\n  routerServerGlobal,\n} from '../../server/lib/router-utils/router-server-context'\nimport { getRequestMeta } from '../../server/request-meta'\nimport { interopDefault } from '../../server/app-render/interop-default'\nimport { getRevalidateReason } from '../../server/instrumentation/utils'\nimport { normalizeDataPath } from '../../shared/lib/page-path/normalize-data-path'\nimport { hoist } from './helpers'\n\n// Import the app and document modules.\nimport * as document from 'VAR_MODULE_DOCUMENT'\nimport * as app from 'VAR_MODULE_APP'\n\n// Import the userland code.\nimport * as userland from 'VAR_USERLAND'\n\n// Re-export the component (should be the default export).\nexport default hoist(userland, 'default')\n\n// Re-export methods.\nexport const getStaticProps = hoist(userland, 'getStaticProps')\nexport const getStaticPaths = hoist(userland, 'getStaticPaths')\nexport const getServerSideProps = hoist(userland, 'getServerSideProps')\nexport const config = hoist(userland, 'config')\nexport const reportWebVitals = hoist(userland, 'reportWebVitals')\n\n// Re-export legacy methods.\nexport const unstable_getStaticProps = hoist(\n  userland,\n  'unstable_getStaticProps'\n)\nexport const unstable_getStaticPaths = hoist(\n  userland,\n  'unstable_getStaticPaths'\n)\nexport const unstable_getStaticParams = hoist(\n  userland,\n  'unstable_getStaticParams'\n)\nexport const unstable_getServerProps = hoist(\n  userland,\n  'unstable_getServerProps'\n)\nexport const unstable_getServerSideProps = hoist(\n  userland,\n  'unstable_getServerSideProps'\n)\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new PagesRouteModule({\n  definition: {\n    kind: RouteKind.PAGES,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n  },\n  distDir: process.env.__NEXT_RELATIVE_DIST_DIR || '',\n  projectDir: process.env.__NEXT_RELATIVE_PROJECT_DIR || '',\n  components: {\n    // default export might not exist when optimized for data only\n    App: app.default,\n    Document: document.default,\n  },\n  userland,\n})\n\nexport async function handler(\n  req: IncomingMessage,\n  res: ServerResponse,\n  ctx: {\n    waitUntil: (prom: Promise<void>) => void\n  }\n): Promise<RenderResult | null> {\n  let srcPage = 'VAR_DEFINITION_PAGE'\n\n  // turbopack doesn't normalize `/index` in the page name\n  // so we need to to process dynamic routes properly\n  // TODO: fix turbopack providing differing value from webpack\n  if (process.env.TURBOPACK) {\n    srcPage = srcPage.replace(/\\/index$/, '') || '/'\n  } else if (srcPage === '/index') {\n    // we always normalize /index specifically\n    srcPage = '/'\n  }\n  const multiZoneDraftMode = process.env\n    .__NEXT_MULTI_ZONE_DRAFT_MODE as any as boolean\n\n  const prepareResult = await routeModule.prepare(req, res, {\n    srcPage,\n    multiZoneDraftMode,\n  })\n\n  if (!prepareResult) {\n    res.statusCode = 400\n    res.end('Bad Request')\n    ctx.waitUntil?.(Promise.resolve())\n    return null\n  }\n\n  const {\n    buildId,\n    query,\n    params,\n    parsedUrl,\n    originalQuery,\n    originalPathname,\n    buildManifest,\n    nextFontManifest,\n    isNextDataRequest,\n    serverFilesManifest,\n    reactLoadableManifest,\n    prerenderManifest,\n    isDraftMode,\n    isOnDemandRevalidate,\n    locale,\n    locales,\n    defaultLocale,\n  } = prepareResult\n\n  const routerServerContext =\n    routerServerGlobal[RouterServerContextSymbol]?.[\n      process.env.__NEXT_RELATIVE_PROJECT_DIR || ''\n    ]\n\n  const onError = routeModule.instrumentationOnRequestError.bind(routeModule)\n  const nextConfig =\n    routerServerContext?.nextConfig || serverFilesManifest.config\n\n  const isExperimentalCompile =\n    serverFilesManifest?.config?.experimental?.isExperimentalCompile\n\n  const isIsrFallback = Boolean(getRequestMeta(req, 'isIsrFallback'))\n  const hasServerProps = Boolean(getServerSideProps)\n  const hasStaticProps = Boolean(getStaticProps)\n  const hasGetInitialProps = Boolean(\n    (userland.default || userland).getInitialProps\n  )\n\n  try {\n    const method = req.method || 'GET'\n    const tracer = getTracer()\n\n    const activeSpan = tracer.getActiveScopeSpan()\n    const resolvedUrl = formatUrl({\n      pathname: parsedUrl.pathname,\n      // make sure to only add query values from original URL\n      query: hasStaticProps ? {} : originalQuery,\n    })\n\n    const publicRuntimeConfig: Record<string, string> =\n      routerServerContext?.publicRuntimeConfig || nextConfig.publicRuntimeConfig\n\n    const invokeRouteModule = async (span?: Span) =>\n      routeModule\n        .render(req, res, {\n          query:\n            hasStaticProps && !isExperimentalCompile\n              ? ({\n                  ...params,\n                  ...(query.amp && config.amp\n                    ? {\n                        amp: query.amp as string,\n                      }\n                    : {}),\n                } as ParsedUrlQuery)\n              : {\n                  ...query,\n                  ...params,\n                },\n          params,\n          page: srcPage,\n          renderContext: {\n            isDraftMode,\n            isFallback: isIsrFallback,\n            developmentNotFoundSourcePage: getRequestMeta(\n              req,\n              'developmentNotFoundSourcePage'\n            ),\n          },\n          sharedContext: {\n            buildId,\n            customServer:\n              Boolean(routerServerContext?.isCustomServer) || undefined,\n            deploymentId: process.env.NEXT_DEPLOYMENT_ID,\n          },\n          renderOpts: {\n            params,\n            routeModule,\n            page: srcPage,\n            pageConfig: config || {},\n            Component: interopDefault(userland),\n            ComponentMod: userland,\n            getStaticProps,\n            getStaticPaths,\n            getServerSideProps,\n            supportsDynamicResponse: !hasStaticProps,\n            buildManifest,\n            nextFontManifest,\n            reactLoadableManifest,\n\n            assetPrefix: nextConfig.assetPrefix,\n            strictNextHead: Boolean(nextConfig.experimental.strictNextHead),\n            previewProps: prerenderManifest.preview,\n            images: nextConfig.images as any,\n            nextConfigOutput: nextConfig.output,\n            optimizeCss: Boolean(nextConfig.experimental.optimizeCss),\n            nextScriptWorkers: Boolean(\n              nextConfig.experimental.nextScriptWorkers\n            ),\n            domainLocales: nextConfig.i18n?.domains,\n            crossOrigin: nextConfig.crossOrigin,\n\n            multiZoneDraftMode,\n            basePath: nextConfig.basePath,\n            canonicalBase: nextConfig.amp.canonicalBase || '',\n            ampOptimizerConfig: nextConfig.experimental.amp?.optimizer,\n            disableOptimizedLoading:\n              nextConfig.experimental.disableOptimizedLoading,\n            largePageDataBytes: nextConfig.experimental.largePageDataBytes,\n            // Only the `publicRuntimeConfig` key is exposed to the client side\n            // It'll be rendered as part of __NEXT_DATA__ on the client side\n            runtimeConfig:\n              Object.keys(publicRuntimeConfig).length > 0\n                ? publicRuntimeConfig\n                : undefined,\n\n            isExperimentalCompile,\n\n            experimental: {\n              clientTraceMetadata:\n                nextConfig.experimental.clientTraceMetadata || ([] as any),\n            },\n\n            locale,\n            locales,\n            defaultLocale,\n\n            isNextDataRequest:\n              isNextDataRequest && (hasServerProps || hasStaticProps),\n\n            resolvedUrl,\n            // For getServerSideProps and getInitialProps we need to ensure we use the original URL\n            // and not the resolved URL to prevent a hydration mismatch on\n            // asPath\n            resolvedAsPath:\n              hasServerProps || hasGetInitialProps\n                ? formatUrl({\n                    // we use the original URL pathname less the _next/data prefix if\n                    // present\n                    pathname: isNextDataRequest\n                      ? normalizeDataPath(originalPathname)\n                      : originalPathname,\n                    query: originalQuery,\n                  })\n                : resolvedUrl,\n\n            isOnDemandRevalidate,\n\n            ErrorDebug: getRequestMeta(req, 'PagesErrorDebug'),\n            err: getRequestMeta(req, 'invokeError'),\n            dev: routeModule.isDev,\n\n            // needed for experimental.optimizeCss feature\n            distDir: `${routeModule.projectDir}/${routeModule.distDir}`,\n\n            ampSkipValidation: nextConfig.experimental.amp?.skipValidation,\n            ampValidator: getRequestMeta(req, 'ampValidator'),\n          },\n        })\n        .finally(() => {\n          if (!span) return\n\n          span.setAttributes({\n            'http.status_code': res.statusCode,\n            'next.rsc': false,\n          })\n\n          const rootSpanAttributes = tracer.getRootSpanAttributes()\n          // We were unable to get attributes, probably OTEL is not enabled\n          if (!rootSpanAttributes) {\n            return\n          }\n\n          if (\n            rootSpanAttributes.get('next.span_type') !==\n            BaseServerSpan.handleRequest\n          ) {\n            console.warn(\n              `Unexpected root span type '${rootSpanAttributes.get(\n                'next.span_type'\n              )}'. Please report this Next.js issue https://github.com/vercel/next.js`\n            )\n            return\n          }\n\n          const route = rootSpanAttributes.get('next.route')\n          if (route) {\n            const name = `${method} ${route}`\n\n            span.setAttributes({\n              'next.route': route,\n              'http.route': route,\n              'next.span_name': name,\n            })\n            span.updateName(name)\n          } else {\n            span.updateName(`${method} ${req.url}`)\n          }\n        })\n\n    // TODO: activeSpan code path is for when wrapped by\n    // next-server can be removed when this is no longer used\n    if (activeSpan) {\n      return await invokeRouteModule(activeSpan)\n    } else {\n      return await tracer.withPropagatedContext(req.headers, () =>\n        tracer.trace(\n          BaseServerSpan.handleRequest,\n          {\n            spanName: `${method} ${req.url}`,\n            kind: SpanKind.SERVER,\n            attributes: {\n              'http.method': method,\n              'http.target': req.url,\n            },\n          },\n          invokeRouteModule\n        )\n      )\n    }\n  } catch (err) {\n    await onError(\n      req,\n      err,\n      {\n        path: req.url || '/',\n        headers: req.headers,\n        method: req.method || 'GET',\n      },\n      {\n        routerKind: 'Pages Router',\n        routePath: srcPage,\n        routeType: 'render',\n        revalidateReason: getRevalidateReason({\n          isRevalidate: hasStaticProps,\n          isOnDemandRevalidate,\n        }),\n      }\n    )\n\n    // rethrow so that we can handle serving error page\n    throw err\n  } finally {\n    // We don't allow any waitUntil work in pages API routes currently\n    // so if callback is present return with resolved promise since no\n    // pending work\n    ctx.waitUntil?.(Promise.resolve())\n  }\n}\n"],"names":["config","getServerSideProps","getStaticPaths","getStaticProps","handler","reportWebVitals","routeModule","unstable_getServerProps","unstable_getServerSideProps","unstable_getStaticParams","unstable_getStaticPaths","unstable_getStaticProps","hoist","userland","PagesRouteModule","definition","kind","RouteKind","PAGES","page","pathname","bundlePath","filename","distDir","process","env","__NEXT_RELATIVE_DIST_DIR","projectDir","__NEXT_RELATIVE_PROJECT_DIR","components","App","app","default","Document","document","req","res","ctx","routerServerGlobal","serverFilesManifest","srcPage","TURBOPACK","replace","multiZoneDraftMode","__NEXT_MULTI_ZONE_DRAFT_MODE","prepareResult","prepare","statusCode","end","waitUntil","Promise","resolve","buildId","query","params","parsedUrl","originalQuery","originalPathname","buildManifest","nextFontManifest","isNextDataRequest","reactLoadableManifest","prerenderManifest","isDraftMode","isOnDemandRevalidate","locale","locales","defaultLocale","routerServerContext","RouterServerContextSymbol","onError","instrumentationOnRequestError","bind","nextConfig","isExperimentalCompile","experimental","isIsrFallback","Boolean","getRequestMeta","hasServerProps","hasStaticProps","hasGetInitialProps","getInitialProps","method","tracer","getTracer","activeSpan","getActiveScopeSpan","resolvedUrl","formatUrl","publicRuntimeConfig","invokeRouteModule","span","render","amp","renderContext","isFallback","developmentNotFoundSourcePage","sharedContext","customServer","isCustomServer","undefined","deploymentId","NEXT_DEPLOYMENT_ID","renderOpts","pageConfig","Component","interopDefault","ComponentMod","supportsDynamicResponse","assetPrefix","strictNextHead","previewProps","preview","images","nextConfigOutput","output","optimizeCss","nextScriptWorkers","domainLocales","i18n","domains","crossOrigin","basePath","canonicalBase","ampOptimizerConfig","optimizer","disableOptimizedLoading","largePageDataBytes","runtimeConfig","Object","keys","length","clientTraceMetadata","resolvedAsPath","normalizeDataPath","ErrorDebug","err","dev","isDev","ampSkipValidation","skipValidation","ampValidator","finally","setAttributes","rootSpanAttributes","getRootSpanAttributes","get","BaseServerSpan","handleRequest","console","warn","route","name","updateName","url","withPropagatedContext","headers","trace","spanName","SpanKind","SERVER","attributes","path","routerKind","routePath","routeType","revalidateReason","getRevalidateReason","isRevalidate"],"mappings":"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","ignoreList":[0]}